#include<iostream>
#include<cstring>
#include<vector>
using namespace std;
vector<int>path[1005];
int flag[1005];
int map[1005][1005]; 
void DFS(int a,int b,int flag[])
{
	flag[a]=1;
	map[a][b]=1;
	map[b][a]=1;
	for(int i=0;i<path[a].size();i++)
	{
		if(flag[path[a][i]]==0)
			DFS(path[a][i],b,flag);
	}
}
int main()
{
	int n,m;
	scanf("%d%d",&n,&m);
	memset(map,0,sizeof(map));
	int i,j,a,b;
	for(i=0;i<m;i++)
	{
		scanf("%d%d",&a,&b);
		path[a].push_back(b);
	}
	for(i=1;i<=n;i++)
	{
		memset(flag,0,sizeof(flag));
		DFS(i,i,flag);
	}
	int ans=0;
	for(i=1;i<=n;i++)
	{
		for(j=1;i<=n;j++)
			if(map[i][j]==0)
				break;
			if(j==n+1)
				ans++;
	}
	printf("%d\n",ans);
	return 0;
}




		